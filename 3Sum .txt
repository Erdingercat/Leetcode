Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note:
Elements in a triplet (a,b,c) must be in non-descending order. (ie, a ? b ? c)
The solution set must not contain duplicate triplets.
    For example, given array S = {-1 0 1 2 -1 -4},

    A solution set is:
    (-1, 0, 1)
    (-1, -1, 2)
	

class Solution {
public:
    vector<vector<int> > threeSum(vector<int> &num) {
        
        vector<vector<int> >res; 
        sort(num.begin(), num.end());
        
        int len = num.size();
        for(int i = 0; i < len-2; i++){
            if(i != 0 && num[i] == num[i-1]) continue;
            
            int ei = num[i];
            int j = i+1; 
            int k = len - 1;
            
            while(j < k){
                int ej = num[j];
                int ek = num[k];
                int sum2 = ej + ek;
                if( sum2 == -ei){
                    vector<int> triple = {ei,ej,ek};
                    res.push_back(triple);
                }
                
                if(sum2 <= -ei){
                    do{
                        j++;
                    }while(j < k && num[j] == ej);
                }
                if(sum2 >= -ei){
                    do{
                        k--;
                    }while(k > j && num[k] == ek);
                }
            }
        }
        return res;
    }
};