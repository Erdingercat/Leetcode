/**
 * Definition for binary tree with next pointer.
 * struct TreeLinkNode {
 *  int val;
 *  TreeLinkNode *left, *right, *next;
 *  TreeLinkNode(int x) : val(x), left(NULL), right(NULL), next(NULL) {}
 * };
 */
class Solution {
public:
    void connect(TreeLinkNode *root) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        
        if( root != NULL){
            TreeLinkNode *n = findnext(root->next);
            
            if(root -> left != NULL && root->right != NULL){
                root->left->next = root->right;
                root->right->next = n;
                
                // Remember!! need to finish right part first.
                connect( root->right);
                connect( root->left);
                
                
            }else if(root->left != NULL){
                root->left->next = n;
                connect(root ->left);
            }else if(root->right != NULL){
                root->right->next = n;
                connect(root->right);
            }
        }
        
    }
    
    TreeLinkNode* findnext(TreeLinkNode *root){
        if(root == NULL){
            return NULL;
        }
        if(root->left != NULL){
            return root->left;
        }else if(root -> right != NULL){
            return root->right;
        }else{
            return findnext(root->next);
        }
    }
};