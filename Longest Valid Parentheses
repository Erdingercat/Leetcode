class Solution {
public:
    int longestValidParentheses(string s) {
        
        int l = s.size();
        int maxLen  = 0;
        
        stack<int> valid;
        stack<char> symbol;
        
        for(int i = 0; i < l; i++){
            if(s[i]== '('){
                valid.push(i);
                symbol.push('(');
                
            } else{ //s[i] == ')'
                if(!valid.empty() && symbol.top() == '('){
                    
                    valid.pop();
                    symbol.pop();
                    
                    if(!valid.empty()){
                        maxLen = max( maxLen, i - valid.top());
                    }else 
                        maxLen = max( maxLen, i +1 );
                    
                }
                else{ 
                    valid.push(i);
                    symbol.push(')');
                }
                
            }
        }
        return maxLen;
    }
};
