Given a binary tree, check whether it is a mirror of itself (ie, symmetric around its center).

For example, this binary tree is symmetric:

/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:

    bool mirrorTree( TreeNode *t1, TreeNode *t2){
        if(t1 && t2){
            return (t1->val == t2->val) && mirrorTree(t1->left, t2->right) && mirrorTree(t1->right, t2->left);
        }
        return !t1 && !t2;
    }
    bool isSymmetric(TreeNode *root) {
        if (!root){
            return true;
        }
        return mirrorTree(root->left, root->right);
    }
};