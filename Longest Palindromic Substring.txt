class Solution {
public:
    string longestPalindrome(string s) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        string res;
        
        int len = s.size();
        int l;
        int r;
        
        
        //consider palindrome with odd length
        for(int i = 0; i < len; i++){
            l = i;
            r = i;
            while(l >= 0 && r < len && s[l] == s[r]){
                l--;
                r++;
            }
            
            string tmp(s, l+1, r-l-1 );
            res = tmp.size()>res.size()?tmp:res;
        }
        
        //consider palindrome with even length
        for(int i = 0; i < len -1; i++){
            l = i;
            r = i+1;
            while(l >= 0 && r < len && s[l] == s[r]){
                l--;
                r++;
            }
            string tmp(s, l+1, r-l-1);
            res = tmp.size()>res.size()?tmp:res;
        }
        return res;
    }
};