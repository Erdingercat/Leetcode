class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int> > &obstacleGrid) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        
        int m = obstacleGrid.size();
        if(m == 0){
            return 0;
        }
        int n = obstacleGrid[0].size();
        if(n == 0){
            return 0;
        }
        
        vector<vector<int> >table(m+1, vector<int>(n+1,0)) ;
        table[m-1][n-1] = 1;
        
        for(int i = m-1; i >= 0; i--){
            for(int j = n-1; j >= 0 ; j--){
                
                if(i != m-1 && obstacleGrid[i+1][j] == 0){
                    table[i][j] += table[i+1][j];
                }
                if(j != n-1 && obstacleGrid[i][j+1] == 0){
                    table[i][j] += table[i][j+1];
                }
            }
        }
        return (obstacleGrid[0][0] == 0)?table[0][0]:0;
        
        
        
    }
};