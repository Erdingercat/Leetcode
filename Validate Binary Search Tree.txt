/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:

    int minVal(TreeNode *root){

        assert(root);
        
        TreeNode *curr = root;
        while(curr -> left){
            curr = curr->left;
        }
        return curr->val;
    }
        
    int maxVal(TreeNode *root){

        assert(root);
        
        TreeNode *curr = root;
        while(curr -> right){
            curr = curr->right;
        }
        return curr->val;
    }
    
    
    bool isValidBST(TreeNode *root) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        
        if(!root){
            return true;
        }
        
        bool res = true;
        
        if(root->left){
            res &= isValidBST(root->left);
            res &= (root->val > maxVal(root ->left));
        }
        
        if(root->right){
            res &= isValidBST(root->right);
            res &= (root->val < minVal(root ->right));
        }
        return res;
        
        
    }
};