Follow up for "Find Minimum in Rotated Sorted Array":
What if duplicates are allowed?

Would this affect the run-time complexity? How and why?
Suppose a sorted array is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

Find the minimum element.

The array may contain duplicates.



// Can only to linear search
class Solution {
public:
    int findMin(vector<int> &num) {
        
        int n = num.size();
        int minVal = INT_MAX;
        
        for(int i =0; i < n; i++){
            minVal = min(num[i], minVal);
        }
        return minVal;
    }
};