Find the contiguous subarray within an array (containing at least one number) which has the largest sum.

For example, given the array [−2,1,−3,4,−1,2,1,−5,4],
the contiguous subarray [4,−1,2,1] has the largest sum = 6.


class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int n = nums.size();
        if(n == 0) return 0;
        
        int max_sum = nums[0];
        
        for(int i = 1; i < n; i++){
            nums[i] = max(nums[i-1] + nums[i], nums[i]);
            max_sum = max( max_sum, nums[i]);
        }
        return max_sum;
    }
};