Given a binary tree, return the inorder traversal of its nodes' values.

For example:
Given binary tree {1,#,2,3},
   1
    \
     2
    /
   3
return [1,3,2].

Note: Recursive solution is trivial, could you do it iteratively?

confused what "{1,#,2,3}" means? > read more on how binary tree is serialized on OJ.




/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> inorderTraversal(TreeNode *root) {
        vector<int> inorder;
        if(!root){
            return inorder;
        }
        
        vector<int> l = inorderTraversal(root->left);
        inorder.insert(inorder.end(), l.begin(), l.end());
        
        inorder.push_back(root->val);
        
        vector<int> r = inorderTraversal(root->right);
        inorder.insert(inorder.end(), r.begin(), r.end());
        
    }
};



