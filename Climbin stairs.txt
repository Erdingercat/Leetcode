You are climbing a stair case. It takes n steps to reach to the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?



class Solution {
public:
    int climbStairs(int n) {

        /*
		//version 1
		
		if (n <= 0){
            return 0;
        }else if (n == 1)
            return 1;
        else if (n == 2)
            return 2;
    
        return(climbStairs(n-1)+climbStairs(n-2) );
        */    
        

        /*
        //version 2
		vector<int> table(n+1);
        
        table[0] = 1;
        table[1] = 1;
        
        for(int i = 2; i <= n; i++){
            table[i] = table[i-1]+table[i-2];
        }
        return table[n];
		
		*/


        
        //version 3
    
        int x = 1; //record n-1
        int y = 2; //record n-2;
        int z; //record n;
        int cnt = 3; //start from n=3
        
        while(cnt <= n){
            z = x+y;
            x = y;
            y = z;

            cnt++;
        }
        return z;
        
        
        
    }
};