
Given two binary strings, return their sum (also a binary string).

For example,
a = "11"
b = "1"
Return "100".


class Solution {
public:
    string addBinary(string a, string b) {
        if(a.empty() && b.empty())
        {
            string e;
            e.clear();
            return e;
        }
            
        else if (a.empty())
            return b;
        else if (b.empty())
            return a;
        else{
            int aLen = a.length();
            int bLen = b.length();
            string aSubstr(a, 0, aLen-1);
            string bSubstr(b, 0, bLen-1);
            
            if (a[aLen-1] == '0' && b[bLen-1] == '0'){
                return addBinary(aSubstr, bSubstr)+= "0" ;
            }                
            else if (a[aLen-1] == '0' && b[bLen-1] == '1'){
                return addBinary(aSubstr, bSubstr)+= "1" ;
            }
            else if (a[aLen-1] == '1' && b[bLen-1] == '0'){
                return addBinary(aSubstr, bSubstr)+= "1" ;
            }
            else if (a[aLen-1] == '1' && b[bLen-1] == '1'){
                string carry = "1";
                return addBinary(addBinary(aSubstr, bSubstr),carry)+= "0";
                
            }
        }
    }
};



class Solution {
public:
    string addBinary(string a, string b) {
        string res;
        
        int aIdx = a.size()-1;
        int bIdx = b.size()-1;
        bool f = 0;
        
        while(aIdx >= 0 || bIdx >= 0){
            char achar = (aIdx >=0)?a[aIdx]:'0';
            char bchar = (bIdx >=0)?b[bIdx]:'0';
            char bit = check(achar, bchar, f);
            res = bit+ res;
            aIdx --;
            bIdx --;
        }
        if(f) res = '1'+res;
        return res;
        
    }
    
    char check(char a, char b, bool& flag){
        //bool tmp = flag;
        char res;
    
        if (a != b){
            res = flag?'0':'1';
        }else{
            
            res = flag?'1':'0';
            flag = (a == '0')?0:1;
        }
        return res;
    }
};