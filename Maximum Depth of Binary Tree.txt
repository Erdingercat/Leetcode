/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int maxDepth(TreeNode *root) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if(root == NULL){
            return 0;
        }
        
        int leftDepth = maxDepth(root->left);
        int rightDepth = maxDepth(root->right);
        
        int depth = max(leftDepth + 1, rightDepth +1);
        return depth;
    }
};



/****************************************************************************************************************/
class Solution {
public:
    int maxDepth(TreeNode *root) {
        if (!root){
            return 0;
        }
        
        return std::max(
            maxDepth(root->left),
            maxDepth(root->right)
            )+1;
    }
};