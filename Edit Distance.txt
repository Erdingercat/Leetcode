class Solution {
public:
    int minDistance(string word1, string word2) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int len1 = word1.length();
        int len2 = word2.length();
        
        int DPTable[len1+1][len2+1];
        
        DPTable[0][0] = 0;
        
        //initialize the first row and first column
        for(int i = 1; i < len1+1; i++){
            DPTable[i][0] = i;
        }
                
        for(int i = 1; i < len2+1; i++){
            DPTable[0][i] = i;
        }
        
        
        for(int i = 1; i < len1+1; i++){
            for(int j = 1; j < len2+1; j++){
                
                int replace = (word1[i-1]==word2[j-1])?0:1;
                replace += DPTable[i-1][j-1];
                
                DPTable[i][j] = min(replace, min(DPTable[i-1][j]+1, DPTable[i][j-1]+1));
            }
        }
        return DPTable[len1][len2];
    }
};