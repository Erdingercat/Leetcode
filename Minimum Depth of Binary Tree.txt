/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int minDepth(TreeNode *root) {
        
        if(!root) return 0;
        
        int depth = 1;
        vector<TreeNode*> parents;
        vector<TreeNode*> children;
        
        parents.push_back(root);
        
        while(!parents.empty()){
            for(int i = 0; i < parents.size(); i++){
                TreeNode* curr = parents[i];
                if(!curr->left && !curr->right) return depth;
                if(curr->left){
                    children.push_back(curr->left);
                }
                if(curr->right){
                    children.push_back(curr->right);
                }   
            }
            parents = children;
            children.clear();
            depth++; 
        }
        return depth;
    }
};