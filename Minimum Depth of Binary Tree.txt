Given a binary tree, find its minimum depth.The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node./** * Definition for binary tree * struct TreeNode { *     int val; *     TreeNode *left; *     TreeNode *right; *     TreeNode(int x) : val(x), left(NULL), right(NULL) {} * }; */class Solution {public:    int minDepth(TreeNode *root) {        if(!root) return 0;                int d = 0;        queue<TreeNode*> parents;        queue<TreeNode*> children;        parents.push(root);                while(!parents.empty()){            d++;            while(!parents.empty()){                TreeNode* curr = parents.front();                parents.pop();                if(!curr->left && !curr->right)                    return d;                if(curr->left)                    children.push(curr->left);                if(curr->right)                    children.push(curr->right);            }            queue<TreeNode*> tmp = parents;            parents = children;            children = tmp;        }    }};